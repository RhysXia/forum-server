buildscript {
    ext {
        springBootVersion = '1.5.12.RELEASE'
        dockerVersion = '1.2'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:${dockerVersion}")
    }
}
task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}
allprojects {
    group = 'site.rhys.forum'
    version = "1.0.0"
}

subprojects {
    ext {
        springCloudVersion = 'Edgware.SR3'
        mybatisSpringBootVersion = '1.3.2'
        pageHelperSpringBootVersion = '1.2.5'
        druidSpringBootVersion = '1.1.9'
        springfoxSwaggerVersion = '2.8.0'
        hibernateJpaVersion = '1.0.0.Final'
    }
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'


    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        compile("org.projectlombok:lombok")

    }

    if (project.name == "forum-common") {

    } else {
        dependencies {
            compile(project(":forum-common"))
        }
    }


    if (project.name.startsWith("forum-service-")) {
        // controller dependency
        if (project.name.endsWith("-api")) {
            dependencies {
                compile("io.springfox:springfox-swagger2:${springfoxSwaggerVersion}")
                compile("org.springframework:spring-web")
                compile("org.springframework.data:spring-data-commons")
                compile("org.hibernate.javax.persistence:hibernate-jpa-2.1-api:${hibernateJpaVersion}")
                compile("org.hibernate:hibernate-validator")
            }
        } else {
            // service-api dependency
            dependencies {
                compile(project(":forum-support-spring-boot-starter"))
                compile("io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}")
                compile(project(":${project.name}-api"))
                compile("org.springframework.cloud:spring-cloud-starter-eureka")
                compile("org.springframework.cloud:spring-cloud-starter-feign")
                compile('org.springframework.boot:spring-boot-starter-actuator')
                compile("com.alibaba:druid-spring-boot-starter:${druidSpringBootVersion}")
//                compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootVersion}")
                compile("org.springframework.boot:spring-boot-starter-data-jpa")
//                compile("com.github.pagehelper:pagehelper-spring-boot-starter:${pageHelperSpringBootVersion}")
                runtime("mysql:mysql-connector-java")
            }
        }
    }




    if (project.name.startsWith("forum-system-") || (project.name.startsWith("forum-service-") && !project.name.endsWith("-api"))) {
        apply plugin: 'docker'
        apply plugin: 'application'

        docker {
            baseImage 'java:8-jre-alpine'
            maintainer 'Rhys <xrs4433@outlook.com>'

        }
        distDocker {
            push = false
            tag = "forum-server/${jar.baseName}"
            runCommand("mkdir /app")
            workingDir("/app")
            addFile("${jar.baseName}-${jar.version}.jar", "/app/app.jar")
            entryPoint(["java", "-jar", "/app/app.jar"])
            exposePort(8000)
            doFirst {
                copy {
                    from jar
                    into stageDir
                }
            }
        }
    }

}

project(":forum-support-spring-boot-starter") {
    dependencies {
        compile("org.springframework:spring-webmvc")
        compile("javax.servlet:javax.servlet-api")
    }
}

project(":forum-system-center") {
    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-eureka-server")
    }
}
project(":forum-system-gateway") {
    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-eureka")
        compile("org.springframework.cloud:spring-cloud-starter-zuul")
    }
}

project(":forum-service-user-api") {

}

project(":forum-service-user") {

}

project(":forum-service-article") {
    dependencies {
        compile(project(":forum-service-user-api"))
    }
}